//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Game/Player Input.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player Input"",
    ""maps"": [
        {
            ""name"": ""PlayerKeyboardInput"",
            ""id"": ""e16b5313-6eb0-4ae2-b3ff-f0b4b099458f"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""a7eba4c6-09aa-4464-ba7c-dc8b473d20b3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BEG"",
                    ""type"": ""Button"",
                    ""id"": ""1e00478b-f109-4398-aa4a-a4b3dfbd7c72"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PRIZOK"",
                    ""type"": ""Button"",
                    ""id"": ""4955b9d5-5a3d-4174-8da4-d8fe36017cc5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""YZAT"",
                    ""type"": ""Button"",
                    ""id"": ""724b969f-1f9c-4bbe-a71d-f145c4cd3695"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""POLZTI"",
                    ""type"": ""Button"",
                    ""id"": ""b556e777-bde9-4507-bb16-4b3db5ce9e82"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""5789b794-3f0a-41b4-8594-c586cd09b46f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AGONb"",
                    ""type"": ""Button"",
                    ""id"": ""45d4f8b2-90dd-4520-8718-c934c4ff45dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0024a964-dba3-4c0b-80b5-dccb6d1e6f35"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""SWAD"",
                    ""id"": ""ebce0d1a-1e0a-4550-a1fc-03c7252cbbcd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1ae622ff-b55b-4d2c-b1fb-c79593c8c461"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""94f0a178-74e5-4e54-a1a4-23bd7469af5f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6caa8d4b-881e-4e01-9954-4dbff3349bc5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f124f3b3-2010-41de-9c93-f46418158c48"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""d864c6ab-9bce-47f0-8d6b-2786829eea1a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fffcbf1e-fab2-4940-9a8f-8eb244190045"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""90c9e450-d213-4ce5-9b06-68067e9d801e"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""52179e5d-0705-4189-8286-721f41582f91"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ac27c401-0546-4b9f-b510-b18da301d75f"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e4d8291b-f121-4c90-9fcb-439b4147ce3f"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BEG"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc6ab741-9f3d-4ba3-8568-1447c4d67ade"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PRIZOK"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""428cfbf0-88ae-4356-9b2c-d50cc0c18f12"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""YZAT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c63a2ee2-58fc-40b6-a867-f660156644cb"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""POLZTI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a796700d-239f-4095-ab9b-e4355918377d"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55da3d7b-8ee0-42b3-818c-a9c9d305b79d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AGONb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerKeyboardInput
        m_PlayerKeyboardInput = asset.FindActionMap("PlayerKeyboardInput", throwIfNotFound: true);
        m_PlayerKeyboardInput_Movement = m_PlayerKeyboardInput.FindAction("Movement", throwIfNotFound: true);
        m_PlayerKeyboardInput_BEG = m_PlayerKeyboardInput.FindAction("BEG", throwIfNotFound: true);
        m_PlayerKeyboardInput_PRIZOK = m_PlayerKeyboardInput.FindAction("PRIZOK", throwIfNotFound: true);
        m_PlayerKeyboardInput_YZAT = m_PlayerKeyboardInput.FindAction("YZAT", throwIfNotFound: true);
        m_PlayerKeyboardInput_POLZTI = m_PlayerKeyboardInput.FindAction("POLZTI", throwIfNotFound: true);
        m_PlayerKeyboardInput_Aim = m_PlayerKeyboardInput.FindAction("Aim", throwIfNotFound: true);
        m_PlayerKeyboardInput_AGONb = m_PlayerKeyboardInput.FindAction("AGONb", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerKeyboardInput
    private readonly InputActionMap m_PlayerKeyboardInput;
    private List<IPlayerKeyboardInputActions> m_PlayerKeyboardInputActionsCallbackInterfaces = new List<IPlayerKeyboardInputActions>();
    private readonly InputAction m_PlayerKeyboardInput_Movement;
    private readonly InputAction m_PlayerKeyboardInput_BEG;
    private readonly InputAction m_PlayerKeyboardInput_PRIZOK;
    private readonly InputAction m_PlayerKeyboardInput_YZAT;
    private readonly InputAction m_PlayerKeyboardInput_POLZTI;
    private readonly InputAction m_PlayerKeyboardInput_Aim;
    private readonly InputAction m_PlayerKeyboardInput_AGONb;
    public struct PlayerKeyboardInputActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerKeyboardInputActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerKeyboardInput_Movement;
        public InputAction @BEG => m_Wrapper.m_PlayerKeyboardInput_BEG;
        public InputAction @PRIZOK => m_Wrapper.m_PlayerKeyboardInput_PRIZOK;
        public InputAction @YZAT => m_Wrapper.m_PlayerKeyboardInput_YZAT;
        public InputAction @POLZTI => m_Wrapper.m_PlayerKeyboardInput_POLZTI;
        public InputAction @Aim => m_Wrapper.m_PlayerKeyboardInput_Aim;
        public InputAction @AGONb => m_Wrapper.m_PlayerKeyboardInput_AGONb;
        public InputActionMap Get() { return m_Wrapper.m_PlayerKeyboardInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerKeyboardInputActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerKeyboardInputActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerKeyboardInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerKeyboardInputActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @BEG.started += instance.OnBEG;
            @BEG.performed += instance.OnBEG;
            @BEG.canceled += instance.OnBEG;
            @PRIZOK.started += instance.OnPRIZOK;
            @PRIZOK.performed += instance.OnPRIZOK;
            @PRIZOK.canceled += instance.OnPRIZOK;
            @YZAT.started += instance.OnYZAT;
            @YZAT.performed += instance.OnYZAT;
            @YZAT.canceled += instance.OnYZAT;
            @POLZTI.started += instance.OnPOLZTI;
            @POLZTI.performed += instance.OnPOLZTI;
            @POLZTI.canceled += instance.OnPOLZTI;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
            @AGONb.started += instance.OnAGONb;
            @AGONb.performed += instance.OnAGONb;
            @AGONb.canceled += instance.OnAGONb;
        }

        private void UnregisterCallbacks(IPlayerKeyboardInputActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @BEG.started -= instance.OnBEG;
            @BEG.performed -= instance.OnBEG;
            @BEG.canceled -= instance.OnBEG;
            @PRIZOK.started -= instance.OnPRIZOK;
            @PRIZOK.performed -= instance.OnPRIZOK;
            @PRIZOK.canceled -= instance.OnPRIZOK;
            @YZAT.started -= instance.OnYZAT;
            @YZAT.performed -= instance.OnYZAT;
            @YZAT.canceled -= instance.OnYZAT;
            @POLZTI.started -= instance.OnPOLZTI;
            @POLZTI.performed -= instance.OnPOLZTI;
            @POLZTI.canceled -= instance.OnPOLZTI;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
            @AGONb.started -= instance.OnAGONb;
            @AGONb.performed -= instance.OnAGONb;
            @AGONb.canceled -= instance.OnAGONb;
        }

        public void RemoveCallbacks(IPlayerKeyboardInputActions instance)
        {
            if (m_Wrapper.m_PlayerKeyboardInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerKeyboardInputActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerKeyboardInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerKeyboardInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerKeyboardInputActions @PlayerKeyboardInput => new PlayerKeyboardInputActions(this);
    public interface IPlayerKeyboardInputActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnBEG(InputAction.CallbackContext context);
        void OnPRIZOK(InputAction.CallbackContext context);
        void OnYZAT(InputAction.CallbackContext context);
        void OnPOLZTI(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnAGONb(InputAction.CallbackContext context);
    }
}
